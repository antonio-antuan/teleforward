name: "Start app"
description: "Starts the app on the server. First - checks if it is authorized. If not - creates an issue with instructions."


inputs:
  server-host:
    required: true
    description: "Connection string to postgres database server"
  server-username:
    required: true
  server-key:
    required: true
  server-port:
    required: true
  auth-code:
    required: false
    description: "Authorization code"
#  pat:
#    required: true
  image:
    required: true
  server_workdir:
    required: true
    description: "Server working directory"

runs:

  using: composite

  steps:

    - name: stop app
      id: stop-app
      uses: appleboy/ssh-action@v1.0.0
      with:
        host:  ${{ inputs.server-host }}
        username: ${{ inputs.server-username }}
        key: ${{ inputs.server-key }}
        port: ${{ inputs.server-port }}
        script: |
          cd ${{ inputs.server_workdir }}
          docker-compose stop && docker-compose rm -f teleforward

    - name: authorize
      id: auth
      uses: appleboy/ssh-action@v1.0.0
      if: inputs.auth-code != ''
      with:
        host:  ${{ inputs.server-host }}
        username: ${{ inputs.server-username }}
        key: ${{ inputs.server-key }}
        port: ${{ inputs.server-port }}
        script: |
          export IMAGE=${{ inputs.image }}
          cd ${{ inputs.server_workdir }}
          phone=$(docker-compose logs teleforward | grep 'auth code is needed for' | tail -1 | awk '{print $NF}')
          timeout --signal SIGKILL 10s docker-compose run --rm teleforward init $phone:${{ inputs.auth-code }}

    - name: start app
      id: start-app
      uses: appleboy/ssh-action@v1.0.0
      with:
        host:  ${{ inputs.server-host }}
        username: ${{ inputs.server-username }}
        key: ${{ inputs.server-key }}
        port: ${{ inputs.server-port }}
        script: |
          cd ${{ inputs.server_workdir }}
          export IMAGE=${{ inputs.image }}
          docker-compose up -d
          sleep 5
          restarts=$(docker inspect --format '{{ .RestartCount }}' $(docker-compose ps -q))
          if [ $restarts -gt 0 ]; then
              docker-compose stop
              echo "App failed to start, restarts: $restarts"
              exit 1
          fi

    - name: create an issue
      uses: dacbd/create-issue-action@v1.2.1
      if: steps.start-app.outcome != 'success'
      with:
        token: ${{ github.token }}
        title: Failed to start app
        body: |
          # Telegram authorization is needed
          Looks like app failed to start because it is not authorized (the most common reason).
          You can check it manually on server and close this issue if it is not an authorization issue.
          
          If you do know that app needs to be authorized, please, enter the authorization code in the comment below.
          Put your comment here as `/auth code=XXXXXX`.




